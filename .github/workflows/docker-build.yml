name: Build & Publish Docker (ohc-profiles-bot)

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: read
  packages: write
  id-token: write

env:
  IMAGE_NAME: ohc-profiles-bot

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm install

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=sha

      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      # -------------------------
      # Create artifact for Synology
      # -------------------------

      # Figure out what tag we just built (branch/tag name)
      - name: Compute image tag
        id: picktag
        run: |
          if [ "${{ github.ref_type }}" = "branch" ]; then
            TAG="${{ github.ref_name }}"
          elif [ "${{ github.ref_type }}" = "tag" ]; then
            TAG="${{ github.ref_name }}"
          else
            TAG="main"
          fi
          echo "TAG=$TAG" >> $GITHUB_OUTPUT

      # Pull the image we just pushed so it's available locally
      - name: Pull image from GHCR
        run: docker pull ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ steps.picktag.outputs.TAG }}

      # Save it to a tarball
      - name: Save Docker image to tar
        run: docker save ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ steps.picktag.outputs.TAG }} -o ohc-profiles-bot.tar

      # Upload the tarball as a GitHub Action artifact
      - name: Upload artifact (tar)
        uses: actions/upload-artifact@v4
        with:
          name: ohc-profiles-bot-image
          path: ohc-profiles-bot.tar
